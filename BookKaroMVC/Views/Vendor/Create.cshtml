@model BookKaroMVC.Models.tblVendor

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>tblVendor</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.VendorName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorName)
                @Html.ValidationMessageFor(model => model.VendorName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorPriceRangeMinimum, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorPriceRangeMinimum)
                @Html.ValidationMessageFor(model => model.VendorPriceRangeMinimum)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorCapacityMinimum, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorCapacityMinimum)
                @Html.ValidationMessageFor(model => model.VendorCapacityMinimum)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorEnteredOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorEnteredOn)
                @Html.ValidationMessageFor(model => model.VendorEnteredOn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorEnteredBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorEnteredBy)
                @Html.ValidationMessageFor(model => model.VendorEnteredBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorUpdatedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorUpdatedOn)
                @Html.ValidationMessageFor(model => model.VendorUpdatedOn)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorUpdatedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorUpdatedBy)
                @Html.ValidationMessageFor(model => model.VendorUpdatedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorPriceRangeMaximum, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorPriceRangeMaximum)
                @Html.ValidationMessageFor(model => model.VendorPriceRangeMaximum)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MembershipID, "MembershipID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MembershipID", String.Empty)
                @Html.ValidationMessageFor(model => model.MembershipID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorAddress, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorAddress)
                @Html.ValidationMessageFor(model => model.VendorAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorCapacityMaximum, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorCapacityMaximum)
                @Html.ValidationMessageFor(model => model.VendorCapacityMaximum)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", String.Empty)
                @Html.ValidationMessageFor(model => model.UserID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AreaCode, "AreaCode", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AreaCode", String.Empty)
                @Html.ValidationMessageFor(model => model.AreaCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorImageSource, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorImageSource)
                @Html.ValidationMessageFor(model => model.VendorImageSource)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorDescription)
                @Html.ValidationMessageFor(model => model.VendorDescription)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
